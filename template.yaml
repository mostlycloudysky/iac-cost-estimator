AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  iac-cost-estimator template

Globals:
  Function:
    Timeout: 3
    MemorySize: 128
    Tracing: Active
  Api:
    TracingEnabled: true
Resources:
  IacSQSQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: iac-cost-estimator-queue
      VisibilityTimeout: 300
      ReceiveMessageWaitTimeSeconds: 20
  ApiCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: api.cost-estimator.cloudysky.link
      ValidationMethod: DNS

  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Cors: "'*'"
      Domain:
        DomainName: api.cost-estimator.cloudysky.link
        CertificateArn: !Ref ApiCertificate
        EndpointConfiguration: EDGE
        Route53:
          HostedZoneId: Z01798246FUPJEQVEZR8
  IacCostEstimatorFunction:
    Type: AWS::Serverless::Function 
    Properties:
      Environment:
        Variables:
          GITHUB_WEBHOOK_SECRET: !Sub "{{resolve:ssm:/github/webhook-secret:1}}"
          SQS_QUEUE_URL: !Sub "{{resolve:ssm:/iac/sqs/url:1}}"
      CodeUri: iac_cost_estimator/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Events:
        HelloWorld:
          Type: Api 
          Properties:
            Path: /
            Method: post
            RestApiId: 
              Ref: ApiGatewayApi
      Policies: 
        - SQSSendMessagePolicy:
            QueueName: !GetAtt IacSQSQueue.QueueName

  SQSProcessorStepFunctionInitFunction:
    Type: AWS::Serverless::Function 
    Properties:
      Environment:
        Variables:
          SQS_QUEUE_URL: !Sub "{{resolve:ssm:/iac/sqs/url:1}}"
          STATE_MACHINE_ARN: !GetAtt StateMachine.Arn
      CodeUri: sqs_processor_state_machine_init/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Policies: 
        - StepFunctionsExecutionPolicy:
            StateMachineName: !GetAtt StateMachine.Name
      Events:
        MyQueueEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt IacSQSQueue.Arn
            BatchSize: 10
  StateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: statemachine/stateMachine.asl.json
      DefinitionSubstitutions:
        DetermineIaCTypeFunctionArn: !GetAtt DetermineIaCTypeFunction.Arn
        ProcessCloudformationFunctionArn: !GetAtt ProcessCloudformationFunction.Arn
        ProcessTerraformFunctionArn: !GetAtt ProcessTerraformFunction.Arn
      Role:
        Fn::GetAtt: [ StatesExecutionRole, Arn ]
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt StateMachineLogGroup.Arn
        IncludeExecutionData: false
        Level: 'ALL'  
  StatesExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - !Sub states.${AWS::Region}.amazonaws.com
            Action: "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: LambdaExecute
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "lambda:InvokeFunction"
                Resource: 
                  - !GetAtt DetermineIaCTypeFunction.Arn
                  - !GetAtt ProcessCloudformationFunction.Arn
                  - !GetAtt ProcessTerraformFunction.Arn
              - Effect: Allow
                Action:
                  - "cloudwatch:*"
                  - "logs:*"
                Resource: "*"
    
  StateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join [ "/", [ "IacCost", StateMachine]]

  DetermineIaCTypeFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: determine_iac_type/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64

  ProcessCloudformationFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: process_cloudformation/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 
                - "bedrock:PutUseCaseForModelAccess"
                - "bedrock:GetUseCaseForModelAccess"
                - "bedrock:DeleteFoundationModelAgreement"
                - "bedrock:CreateAgent"
                - "bedrock:GetFoundationModelAvailability"
                - "bedrock:GetModelInvocationLoggingConfiguration"
                - "bedrock:ListFoundationModelAgreementOffers"
                - "bedrock:AssociateThirdPartyKnowledgeBase"
                - "bedrock:DeleteModelInvocationLoggingConfiguration"
                - "bedrock:ListKnowledgeBases"
                - "bedrock:PutFoundationModelEntitlement"
                - "bedrock:ListModelCustomizationJobs"
                - "bedrock:ListAgents"
                - "bedrock:ListProvisionedModelThroughputs"
                - "bedrock:ListCustomModels"
                - "bedrock:CreateKnowledgeBase"
                - "bedrock:PutModelInvocationLoggingConfiguration"
                - "bedrock:ListFoundationModels"
                - "bedrock:CreateFoundationModelAgreement"
                - "bedrock:InvokeModel"
              Resource: "*"
  ProcessTerraformFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: process_terraform/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'


Outputs:
  IacCostEstimatorApi:
    Description: API Gateway endpoint URL for Prod stage for Hello World function
    Value: https://api.cost-estimator.cloudysky.link/prod/
  IacCostEstimatorFunction:
    Description: IaC Cost Estimator Function ARN
    Value: !GetAtt IacCostEstimatorFunction.Arn
  IacCostEstimatorFunctionIamRole:
    Description: Implicit IAM Role created for IaC Cost Estimator function
    Value: !GetAtt IacCostEstimatorFunctionRole.Arn
